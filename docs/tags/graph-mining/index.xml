<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graph Mining on Navigating The Edge</title>
    <link>https://research.navigating-the-edge.net/tags/graph-mining/</link>
    <description>Recent content in Graph Mining on Navigating The Edge</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 01 Apr 2011 17:35:38 -0700</lastBuildDate><atom:link href="https://research.navigating-the-edge.net/tags/graph-mining/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Exploring Complex, Dynamic Graph Data - Part 3</title>
      <link>https://research.navigating-the-edge.net/posts/2011-04-exploring-complex-dynamic-graph-data-part-3/</link>
      <pubDate>Fri, 01 Apr 2011 17:35:38 -0700</pubDate>
      
      <guid>https://research.navigating-the-edge.net/posts/2011-04-exploring-complex-dynamic-graph-data-part-3/</guid>
      <description>Since my last post, I&amp;rsquo;ve been reminded once again of the challenges presented by dynamic graph data. Earlier I wrote about how I&amp;rsquo;d hoped to exploit graph rewriting operations in Gremlin to efficiently tease out certain classes of communication event sequences in the Enron communication graph. Unfortunately the queries to produce those event sequences are nontrivial in Gremlin even with the abstraction provided through user-defined steps. At present, I think this is due to a mismatch between the representation I&amp;rsquo;ve chosen and the capabilities offered by Gremlin.</description>
    </item>
    
    <item>
      <title>Exploring Complex, Dynamic Graph Data - Part 2</title>
      <link>https://research.navigating-the-edge.net/posts/2011-01-exploring-complex-dynamic-graph-data-part-2/</link>
      <pubDate>Thu, 27 Jan 2011 19:00:21 -0700</pubDate>
      
      <guid>https://research.navigating-the-edge.net/posts/2011-01-exploring-complex-dynamic-graph-data-part-2/</guid>
      <description>In my first post, I advanced the idea that in order to conduct exploratory data analysis (EDA) we need four basic capabilities: persistence, query, analysis and visualization. Moving forward, I want to talk about specific approaches and capabilities I&amp;rsquo;ve examined that I believe provide value for EDA. In this post, we&amp;rsquo;ll focus on mechanisms for persistence and query.
If you&amp;rsquo;ve paid even the slightest attention to recent advances in the database world, it should be clear that the array of available capabilities is ever increasing.</description>
    </item>
    
    <item>
      <title>Exploring Complex, Dynamic Graph Data - Part 1</title>
      <link>https://research.navigating-the-edge.net/posts/2011-01-exploring-complex-dynamic-graph-data-part-1/</link>
      <pubDate>Tue, 04 Jan 2011 08:51:17 -0700</pubDate>
      
      <guid>https://research.navigating-the-edge.net/posts/2011-01-exploring-complex-dynamic-graph-data-part-1/</guid>
      <description>When I was in graduate school in the late 90s working on computer vision problems, MATLAB was my environment of choice. It provided all the tools I required for analysis and then some. Life was simple and grand.
Five years after leaving graduate school, I decided to take a dramatic turn in my research direction. Video surveillance no longer motivated me. Instead, I chose to explore problems at the interface between machine learning and the social sciences.</description>
    </item>
    
  </channel>
</rss>
